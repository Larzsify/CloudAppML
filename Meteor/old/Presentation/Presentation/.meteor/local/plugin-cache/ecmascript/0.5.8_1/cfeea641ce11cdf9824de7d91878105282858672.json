{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./Dasboard.html","imported":[],"specifiers":[]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/Templates/Dasboard/Dasboard.js","filenameRelative":"/imports/ui/Templates/Dasboard/Dasboard.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/Templates/Dasboard/Dasboard.js.map","sourceFileName":"/imports/ui/Templates/Dasboard/Dasboard.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Dasboard"},"ignored":false,"code":"module.import('./Dasboard.html');var Session;module.import('meteor/session',{\"Session\":function(v){Session=v}});\n\n\n//Subscribe to presentations owned by the user\nMeteor.subscribe('myPresentations');\n\n//Helper for getting all Presentations\nTemplate.myPresentations.helpers({\n    presentations: function () {\n        function presentations() {\n            //Gets all presentations associated with user\n            var currentUserId = Meteor.userId();\n            var data = Presentations.find({ createdBy: currentUserId });\n            return data;\n        }\n\n        return presentations;\n    }()\n});\nTemplate.myPresentations.events({\n    'submit #new-name': function () {\n        function submitNewName(e) {\n            e.preventDefault();\n            //Get value from form element\n            var target = e.target;\n            var name = target.newName.value;\n            Presentations.update({ _id: this._id }, { $set: { name: name } });\n        }\n\n        return submitNewName;\n    }(),\n    \"click #delete\": function () {\n        function clickDelete() {\n            //Removes the selected presentation from collection\n            Presentations.remove(this._id);\n        }\n\n        return clickDelete;\n    }(),\n    \"click #edit\": function () {\n        function clickEdit() {}\n\n        return clickEdit;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/imports/ui/Templates/Dasboard/Dasboard.js"],"names":[],"mappings":"AAAA,OAAO,iBAAP;AACA,SAAS,OAAT,QAAwB,gBAAxB;;;AAGA,OAAO,SAAP,CAAiB,iBAAjB;;;AAGA,SAAS,eAAT,CAAyB,OAAzB,CAAiC;AAC7B,iBAD6B;AAAA,iCACd;;AAEX,gBAAI,gBAAgB,OAAO,MAAP,EAApB;AACA,gBAAI,OAAO,cAAc,IAAd,CAAmB,EAAC,WAAW,aAAZ,EAAnB,CAAX;AACA,mBAAO,IAAP;AACH;;AAN4B;AAAA;AAAA,CAAjC;AAQA,SAAS,eAAT,CAAyB,MAAzB,CAAgC;AAC5B,sBAD4B;AAAA,+BACT,CADS,EACP;AACrB,cAAE,cAAF;;AAEA,gBAAM,SAAS,EAAE,MAAjB;AACA,gBAAM,OAAO,OAAO,OAAP,CAAe,KAA5B;AACA,0BAAc,MAAd,CAAqB,EAAC,KAAK,KAAK,GAAX,EAArB,EAAsC,EAAC,MAAM,EAAC,MAAM,IAAP,EAAP,EAAtC;AAEC;;AAR2B;AAAA;AAU7B,mBAV6B;AAAA,+BAUX;;AAEd,0BAAc,MAAd,CAAqB,KAAK,GAA1B;AAEH;;AAd4B;AAAA;AAe5B,iBAf4B;AAAA,6BAeZ,CAEf;;AAjB2B;AAAA;AAAA,CAAhC","file":"/imports/ui/Templates/Dasboard/Dasboard.js.map","sourcesContent":["import './Dasboard.html';\r\nimport { Session } from 'meteor/session'\r\n\r\n//Subscribe to presentations owned by the user\r\nMeteor.subscribe('myPresentations');\r\n\r\n//Helper for getting all Presentations\r\nTemplate.myPresentations.helpers({\r\n    presentations(){\r\n        //Gets all presentations associated with user\r\n        var currentUserId = Meteor.userId();\r\n        var data = Presentations.find({createdBy: currentUserId});\r\n        return data;\r\n    },\r\n});\r\nTemplate.myPresentations.events({\r\n    'submit #new-name'(e){\r\n    e.preventDefault();  \r\n    //Get value from form element\r\n    const target = e.target;\r\n    const name = target.newName.value;\r\n    Presentations.update({_id: this._id}, {$set: {name: name}})\r\n    \r\n    },\r\n    \r\n   \"click #delete\" (){\r\n       //Removes the selected presentation from collection\r\n       Presentations.remove(this._id);\r\n       \r\n   },\r\n    \"click #edit\" (){\r\n      \r\n    },\r\n});\r\n"]},"hash":"cfeea641ce11cdf9824de7d91878105282858672"}
