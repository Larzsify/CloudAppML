{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/blaze","imported":["Blaze"],"specifiers":[{"kind":"named","imported":"Blaze","local":"Blaze"}]}],"exports":{"exported":["BlazeToReact","name","options"],"specifiers":[{"kind":"local","local":"BlazeToReact","exported":"default"},{"kind":"local","local":"name","exported":"default"},{"kind":"local","local":"options","exported":"default"}]}}},"options":{"filename":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","filenameRelative":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx.map","sourceFileName":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"BlazeToReact-client"},"ignored":false,"code":"module.export({default:function(){return BlazeToReact}});var React;module.import('react',{\"default\":function(v){React=v}});var Blaze;module.import('meteor/blaze',{\"Blaze\":function(v){Blaze=v}});\n\n\nfunction BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = React.createElement('span', null);\n  }\n\n  return React.createClass({\n    shouldComponentUpdate: function () {\n      function shouldComponentUpdate() {\n        // Blaze has the full control once started\n        return false;\n      }\n\n      return shouldComponentUpdate;\n    }(),\n    componentWillUnmount: function () {\n      function componentWillUnmount() {\n        Blaze.remove(this.blazeView);\n      }\n\n      return componentWillUnmount;\n    }(),\n    componentWillReceiveProps: function () {\n      function componentWillReceiveProps(props) {\n        this.blazeView.dataVar.set(props);\n      }\n\n      return componentWillReceiveProps;\n    }(),\n    render: function () {\n      function render() {\n        return React.cloneElement(options.container, {\n          ref: function (el) {\n            if (el && !this.blazeView) {\n              this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n            }\n          }.bind(this)\n        });\n      }\n\n      return render;\n    }()\n  });\n};","ast":null,"map":{"version":3,"sources":["/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx"],"names":["React","Blaze","BlazeToReact","name","options","container","createClass","shouldComponentUpdate","componentWillUnmount","remove","blazeView","componentWillReceiveProps","props","dataVar","set","render","cloneElement","ref","el","renderWithData","global","Template","bind"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AAClD,MAAI,CAACA,OAAL,EAAc;AACZA,cAAU,EAAV;AACD;;AAED,MAAI,CAACA,QAAQC,SAAb,EAAwB;AACtBD,YAAQC,SAAR,GAAoB,iCAApB;AACD;;AAED,SAAOL,MAAMM,WAAN,CAAkB;AACvBC,yBADuB;AAAA,uCACC;AACtB;AACA,eAAO,KAAP;AACD;;AAJsB;AAAA;AAMvBC,wBANuB;AAAA,sCAMA;AACrBP,cAAMQ,MAAN,CAAa,KAAKC,SAAlB;AACD;;AARsB;AAAA;AAUvBC,6BAVuB;AAAA,yCAUGC,KAVH,EAUU;AAC/B,aAAKF,SAAL,CAAeG,OAAf,CAAuBC,GAAvB,CAA2BF,KAA3B;AACD;;AAZsB;AAAA;AAcvBG,UAduB;AAAA,wBAcd;AACP,eAAOf,MAAMgB,YAAN,CAAmBZ,QAAQC,SAA3B,EAAsC;AAC3CY,eAAK,UAASC,EAAT,EAAa;AAChB,gBAAIA,MAAM,CAAC,KAAKR,SAAhB,EAA2B;AACzB,mBAAKA,SAAL,GAAiBT,MAAMkB,cAAN,CAAqBC,OAAOC,QAAP,CAAgBlB,IAAhB,CAArB,EAA4C,KAAKS,KAAjD,EAAwDM,EAAxD,CAAjB;AACD;AACF,WAJI,CAIHI,IAJG,CAIE,IAJF;AADsC,SAAtC,CAAP;AAOD;;AAtBsB;AAAA;AAAA,GAAlB,CAAP;AAwBD","file":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx.map","sourcesContent":["import React from 'react';\nimport { Blaze } from 'meteor/blaze';\n\nexport default function BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = <span />;\n  }\n\n  return React.createClass({\n    shouldComponentUpdate() {\n      // Blaze has the full control once started\n      return false;\n    },\n\n    componentWillUnmount() {\n      Blaze.remove(this.blazeView);\n    },\n\n    componentWillReceiveProps(props) {\n      this.blazeView.dataVar.set(props);\n    },\n\n    render() {\n      return React.cloneElement(options.container, {\n        ref: function(el) {\n          if (el && !this.blazeView) {\n            this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n          }\n        }.bind(this)\n      });\n    }\n  });\n};\n"]},"hash":"d85fde450e2ab1b7c10dd55a717cf402c4513c7b"}
