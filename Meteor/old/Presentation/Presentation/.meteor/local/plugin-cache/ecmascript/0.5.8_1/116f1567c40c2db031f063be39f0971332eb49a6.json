{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/blaze","imported":["Blaze"],"specifiers":[{"kind":"named","imported":"Blaze","local":"Blaze"}]}],"exports":{"exported":["BlazeToReact","name","options"],"specifiers":[{"kind":"local","local":"BlazeToReact","exported":"default"},{"kind":"local","local":"name","exported":"default"},{"kind":"local","local":"options","exported":"default"}]}}},"options":{"filename":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","filenameRelative":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx.map","sourceFileName":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"BlazeToReact-client"},"ignored":false,"code":"module.export({default:function(){return BlazeToReact}});var React;module.import('react',{\"default\":function(v){React=v}});var Blaze;module.import('meteor/blaze',{\"Blaze\":function(v){Blaze=v}});\n\n\nfunction BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = React.createElement('span', null);\n  }\n\n  return React.createClass({\n    shouldComponentUpdate: function shouldComponentUpdate() {\n      // Blaze has the full control once started\n      return false;\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      Blaze.remove(this.blazeView);\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(props) {\n      this.blazeView.dataVar.set(props);\n    },\n    render: function render() {\n      return React.cloneElement(options.container, {\n        ref: function (el) {\n          if (el && !this.blazeView) {\n            this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n          }\n        }.bind(this)\n      });\n    }\n  });\n};","ast":null,"map":{"version":3,"sources":["/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,eAAe,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AAClD,MAAI,CAAC,OAAL,EAAc;AACZ,cAAU,EAAV;AACD;;AAED,MAAI,CAAC,QAAQ,SAAb,EAAwB;AACtB,YAAQ,SAAR,GAAoB,iCAApB;AACD;;AAED,SAAO,MAAM,WAAN,CAAkB;AACvB,yBADuB,mCACC;;AAEtB,aAAO,KAAP;AACD,KAJsB;AAMvB,wBANuB,kCAMA;AACrB,YAAM,MAAN,CAAa,KAAK,SAAlB;AACD,KARsB;AAUvB,6BAVuB,qCAUG,KAVH,EAUU;AAC/B,WAAK,SAAL,CAAe,OAAf,CAAuB,GAAvB,CAA2B,KAA3B;AACD,KAZsB;AAcvB,UAduB,oBAcd;AACP,aAAO,MAAM,YAAN,CAAmB,QAAQ,SAA3B,EAAsC;AAC3C,aAAK,UAAS,EAAT,EAAa;AAChB,cAAI,MAAM,CAAC,KAAK,SAAhB,EAA2B;AACzB,iBAAK,SAAL,GAAiB,MAAM,cAAN,CAAqB,OAAO,QAAP,CAAgB,IAAhB,CAArB,EAA4C,KAAK,KAAjD,EAAwD,EAAxD,CAAjB;AACD;AACF,SAJI,CAIH,IAJG,CAIE,IAJF;AADsC,OAAtC,CAAP;AAOD;AAtBsB,GAAlB,CAAP;AAwBD","file":"/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx.map","sourcesContent":["import React from 'react';\nimport { Blaze } from 'meteor/blaze';\n\nexport default function BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = <span />;\n  }\n\n  return React.createClass({\n    shouldComponentUpdate() {\n      // Blaze has the full control once started\n      return false;\n    },\n\n    componentWillUnmount() {\n      Blaze.remove(this.blazeView);\n    },\n\n    componentWillReceiveProps(props) {\n      this.blazeView.dataVar.set(props);\n    },\n\n    render() {\n      return React.cloneElement(options.container, {\n        ref: function(el) {\n          if (el && !this.blazeView) {\n            this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n          }\n        }.bind(this)\n      });\n    }\n  });\n};\n"]},"hash":"116f1567c40c2db031f063be39f0971332eb49a6"}
