[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar BlazeToReact;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"thereactivestack:blazetoreact\":{\"lib\":{\"BlazeToReact.jsx\":[\"meteor/tmeasday:check-npm-versions\",\"./BlazeToReact-server.jsx\",\"./BlazeToReact-client.jsx\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// packages/thereactivestack_blazetoreact/lib/BlazeToReact.jsx                            //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nvar checkNpmVersions;module.import('meteor/tmeasday:check-npm-versions',{\"checkNpmVersions\":function(v){checkNpmVersions=v}});\n                                                                                          //\ncheckNpmVersions({                                                                        // 3\n  react: '15.x'                                                                           // 4\n}, 'thereactivestack:blazetoreact');                                                      // 3\n                                                                                          //\nif (Meteor.isServer) {                                                                    // 7\n  BlazeToReact = require('./BlazeToReact-server.jsx')['default'];                         // 8\n} else {                                                                                  // 9\n  BlazeToReact = require('./BlazeToReact-client.jsx')['default'];                         // 10\n}                                                                                         // 11\n                                                                                          //\nmodule.export(\"default\",exports.default=(BlazeToReact));                                  // 13\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"BlazeToReact-client.jsx\":[\"react\",\"meteor/blaze\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// packages/thereactivestack_blazetoreact/lib/BlazeToReact-client.jsx                     //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nmodule.export({default:function(){return BlazeToReact}});var React;module.import('react',{\"default\":function(v){React=v}});var Blaze;module.import('meteor/blaze',{\"Blaze\":function(v){Blaze=v}});\n                                                                                          // 2\n                                                                                          //\nfunction BlazeToReact(name, options) {                                                    // 4\n  if (!options) {                                                                         // 5\n    options = {};                                                                         // 6\n  }                                                                                       // 7\n                                                                                          //\n  if (!options.container) {                                                               // 9\n    options.container = React.createElement('span', null);                                // 10\n  }                                                                                       // 11\n                                                                                          //\n  return React.createClass({                                                              // 13\n    shouldComponentUpdate: function shouldComponentUpdate() {                             // 14\n      // Blaze has the full control once started                                          //\n      return false;                                                                       // 16\n    },                                                                                    // 17\n    componentWillUnmount: function componentWillUnmount() {                               // 19\n      Blaze.remove(this.blazeView);                                                       // 20\n    },                                                                                    // 21\n    componentWillReceiveProps: function componentWillReceiveProps(props) {                // 23\n      this.blazeView.dataVar.set(props);                                                  // 24\n    },                                                                                    // 25\n    render: function render() {                                                           // 27\n      return React.cloneElement(options.container, {                                      // 28\n        ref: function (el) {                                                              // 29\n          if (el && !this.blazeView) {                                                    // 30\n            this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n          }                                                                               // 32\n        }.bind(this)                                                                      // 33\n      });                                                                                 // 28\n    }                                                                                     // 35\n  });                                                                                     // 13\n};                                                                                        // 37\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"BlazeToReact-server.jsx\":[\"react\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// packages/thereactivestack_blazetoreact/lib/BlazeToReact-server.jsx                     //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nmodule.export({default:function(){return BlazeToReact}});var React;module.import('react',{\"default\":function(v){React=v}});\n                                                                                          //\n// Blaze templates are not loaded server-side, we cannot do server-rendering              //\n// We make sure the render is the same as on the client initially                         //\n                                                                                          //\nvar DummyElement = React.createClass({                                                    // 6\n  displayName: 'DummyElement',                                                            // 6\n  render: function render() {                                                             // 7\n    return React.createElement('span', null);                                             // 8\n  }                                                                                       // 9\n});                                                                                       // 6\n                                                                                          //\nfunction BlazeToReact(name, options) {                                                    // 12\n  if (!options) {                                                                         // 13\n    options = {};                                                                         // 14\n  }                                                                                       // 15\n                                                                                          //\n  if (!options.container) {                                                               // 17\n    options.container = React.createElement('span', null);                                // 18\n  }                                                                                       // 19\n                                                                                          //\n  return React.createClass({                                                              // 21\n    render: function render() {                                                           // 22\n      return options.container;                                                           // 23\n    }                                                                                     // 24\n  });                                                                                     // 21\n};                                                                                        // 26\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}}},{\"extensions\":[\".js\",\".json\",\".jsx\"]});\nvar exports = require(\"./node_modules/meteor/thereactivestack:blazetoreact/lib/BlazeToReact.jsx\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['thereactivestack:blazetoreact'] = exports, {\n  BlazeToReact: BlazeToReact\n});\n\n})();\n","servePath":"/packages/thereactivestack_blazetoreact.js","sourceMap":{"version":3,"sources":["/packages/thereactivestack:blazetoreact/lib/BlazeToReact.jsx","/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","/packages/thereactivestack:blazetoreact/lib/BlazeToReact-server.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAT,QAAiC,oCAAjC;;AAEA,iBAAiB;AACf,SAAO;AADQ,CAAjB,EAEG,+BAFH;;AAIA,IAAI,OAAO,QAAX,EAAqB;AACnB,iBAAe,QAAQ,2BAAR,YAAf;AACD,CAFD,MAEO;AACL,iBAAe,QAAQ,2BAAR,YAAf;AACD;;AAED,eAAe,YAAf,oE;;;;;;;;;;;ACZA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,eAAe,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AAClD,MAAI,CAAC,OAAL,EAAc;AACZ,cAAU,EAAV;AACD;;AAED,MAAI,CAAC,QAAQ,SAAb,EAAwB;AACtB,YAAQ,SAAR,GAAoB,iCAApB;AACD;;AAED,SAAO,MAAM,WAAN,CAAkB;AACvB,yBADuB,mCACC;;AAEtB,aAAO,KAAP;AACD,KAJsB;AAMvB,wBANuB,kCAMA;AACrB,YAAM,MAAN,CAAa,KAAK,SAAlB;AACD,KARsB;AAUvB,6BAVuB,qCAUG,KAVH,EAUU;AAC/B,WAAK,SAAL,CAAe,OAAf,CAAuB,GAAvB,CAA2B,KAA3B;AACD,KAZsB;AAcvB,UAduB,oBAcd;AACP,aAAO,MAAM,YAAN,CAAmB,QAAQ,SAA3B,EAAsC;AAC3C,aAAK,UAAS,EAAT,EAAa;AAChB,cAAI,MAAM,CAAC,KAAK,SAAhB,EAA2B;AACzB,iBAAK,SAAL,GAAiB,MAAM,cAAN,CAAqB,OAAO,QAAP,CAAgB,IAAhB,CAArB,EAA4C,KAAK,KAAjD,EAAwD,EAAxD,CAAjB;AACD;AACF,SAJI,CAIH,IAJG,CAIE,IAJF;AADsC,OAAtC,CAAP;AAOD;AAtBsB,GAAlB,CAAP;AAwBD,+F;;;;;;;;;;;ACpCD,OAAO,KAAP,MAAkB,OAAlB;;;;;AAKA,IAAM,eAAe,MAAM,WAAN,CAAkB;AAAA;AACrC,QADqC,oBAC5B;AACP,WAAO,iCAAP;AACD;AAHoC,CAAlB,CAArB;;AAMA,eAAe,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AAClD,MAAI,CAAC,OAAL,EAAc;AACZ,cAAU,EAAV;AACD;;AAED,MAAI,CAAC,QAAQ,SAAb,EAAwB;AACtB,YAAQ,SAAR,GAAoB,iCAApB;AACD;;AAED,SAAO,MAAM,WAAN,CAAkB;AACvB,UADuB,oBACd;AACP,aAAO,QAAQ,SAAf;AACD;AAHsB,GAAlB,CAAP;AAKD,+F","file":"/packages/thereactivestack_blazetoreact.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  react: '15.x'\n}, 'thereactivestack:blazetoreact');\n\nif (Meteor.isServer) {\n  BlazeToReact = require('./BlazeToReact-server.jsx').default;\n} else {\n  BlazeToReact = require('./BlazeToReact-client.jsx').default;\n}\n\nexport default BlazeToReact;\n","import React from 'react';\nimport { Blaze } from 'meteor/blaze';\n\nexport default function BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = <span />;\n  }\n\n  return React.createClass({\n    shouldComponentUpdate() {\n      // Blaze has the full control once started\n      return false;\n    },\n\n    componentWillUnmount() {\n      Blaze.remove(this.blazeView);\n    },\n\n    componentWillReceiveProps(props) {\n      this.blazeView.dataVar.set(props);\n    },\n\n    render() {\n      return React.cloneElement(options.container, {\n        ref: function(el) {\n          if (el && !this.blazeView) {\n            this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n          }\n        }.bind(this)\n      });\n    }\n  });\n};\n","import React from 'react';\n\n// Blaze templates are not loaded server-side, we cannot do server-rendering\n// We make sure the render is the same as on the client initially\n\nconst DummyElement = React.createClass({\n  render() {\n    return <span />;\n  }\n});\n\nexport default function BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = <span />;\n  }\n\n  return React.createClass({\n    render() {\n      return options.container;\n    }\n  });\n};\n"]}}]